*gin.txt*					Gin makes you drunk with Git

Author:  Alisue <lambdalisue@hashnote.net>
License: MIT License (See LICENSE)


=============================================================================
CONTENTS					*gin-contents*

INTRODUCTION			|gin-introduction|
REQUIREMENTS			|gin-requirements|
INTERFACE			|gin-interface|
  COMMANDS			  |gin-commands|


=============================================================================
INTRODUCTION					*gin-introduction*

Gin ( *gin.vim* ) is a plugin to handle git repository from Vim/Neovim.


=============================================================================
REQUIREMENTS					*gin-requirements*

Gin is written in denops thus users need to install denops.vim

denops.vim~
	An ecosystem for writing Vim/Neovim plugin in Deno.
	https://github.com/vim-denops/denops.vim

Additionally, the following Vim/Neovim plugins are highly recommended to use:

							*gin-guise*
guise.vim~
	To open a new |tabpage| to edit a commit message on "Gin commit".
	https://github.com/lambdalisue/guise.vim~

							*gin-askpass*
askpass.vim~
	To input SSH key passphrase on "Gin push" or so on.
	https://github.com/lambdalisue/askpass.vim
  

=============================================================================
INTERFACE					*gin-interface*

-----------------------------------------------------------------------------
COMMANDS					*gin-commands*

								*:Gin*
:Gin[!] {command} [{args}]
	Call a git raw {command} with {args} asynchronously and echo result.
	For example, "Gin add %" on "hello.txt" invokes "git add hello.txt".
	If a bang (!) is specified, it calls command synchronously instead.

	Note that users need to install guise.vim (|gin-guise|) to open a
	|tabpage| to edit a commit message on "Gin commit" or so on.

	Note that users need to install askpass.vim (|gin-askpass|) to open a
	prompt to input passphrase on "Gin push" or so on.

								*:GinDiff*
:GinDiff [--worktree={worktree}] [{options}] [-- {pathspec}...]
	Open a "gin-diff" buffer to show a diff status of a {worktree}.
	If no {worktree} is specified, gin will find the one from the current
	working directory.

	The following {options} are available:

	--cached
	--renames/--no-renames
	--diff-filter={filter}
	--reverse/-R
	--ignore-cr-at-eol
	--ignore-space-at-eol
	--ignore-space-change/-b
	--ignore-all-space/-w
	--ignore-blank-lines
	--ignore-matching-lines={regex}/-I={regex}
	--ignore-submodules[=none/untracked/dirty/all]
		
	See ":man git-diff(1)" for detail about {options} and {pathspec}.
								*:GinStatus*
:GinStatus [--worktree={worktree}] [{options}] [-- {pathspec}...]
	Open a "gin-status" buffer to show a status of a {worktree}.
	If no {worktree} is specified, gin will find the one from the current
	working directory.

	The following {options} are available:

	--untracked-files[=no/normal/all]
	--ignore-submodules[=none/untracked/dirty/all]
	--ignored[=traditional/no/matching]
	--renames
	--find-renames[={n}]
		
	See ":man git-status(1)" for detail about {options} and {pathspec}.

-----------------------------------------------------------------------------
FUNCTIONS					*gin-functions*

						*gin#action#fn()*
gin#action#fn({callback})
	A wrapper function to make an action mapping.
	The wrapped function is called with {xs} which is a candidate |List|
	when the action is invoked.
	Note that users MUST use <Cmd> pseudokey to define mappings like:
>
	function! s:my_custom(xs) abort
	  echo string(a:xs)
	endfunction

	noremap <buffer> <Plug>(gin-action-my-custom)
	      \ <Cmd>call gin#action#fn({ xs -> <SID>my_custom(xs) })<CR>
<
	WARNING: This API is unstable yet

						*gin#action#call()*
gin#action#call({name}, {range})
	Invoke an action {name} with {range}. The {name} is |String| name and
	the {range} is "[firstline, lastline]" |List|.
	Note that this function uses |feedkeys()| internally.
>
	call gin#action#call('my-custom', [1, 1])
<
	WARNING: This API is unstable yet

	       				*gin#action#list_action()*
gin#action#list_actions()
	List all available actions of the current buffer.
	WARNING: This API is unstable yet

	       				*gin#action#gather_candidates()*
gin#action#gather_candidates({range})
	Gather and return candidates of the current buffer in {range}.
	WARNING: This API is unstable yet


=============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
